<?xml version="1.0" encoding="UTF-8"?>
<project name="readygxp" default="dist" basedir=".">

    <description>
        Ready GXP Build File
    </description>

    <property name="build" location="build"/>
    <property name="app.proxy.geoserver" value=""/>
    <property name="app.port" value="8080"/>
    <property name="cargo.host" value="localhost"/>
    <property name="cargo.port" value="8080"/>
    <property name="cargo.container" value="tomcat6x"/>
    <property name="cargo.username" value="manager"/>
    <property name="cargo.password" value=""/>
    <property name="cargo.context" value="${ant.project.name}"/>

    <condition property="git" value="git.cmd" else="git">
        <os family="windows"/>
    </condition>

    <target name="init">

        <mkdir dir="${build}"/>

        <echo message="pulling in submodules"/>
        <exec executable="${git}" failonerror="true">
            <arg line="submodule init"/>
        </exec>
        <exec executable="${git}" failonerror="true">
            <arg line="submodule sync"/>
        </exec>
        <exec executable="${git}" failonerror="true">
            <arg line="submodule update"/>
        </exec>

        <echo message="building ringo jars"/>
        <ant dir="externals/ringo" target="jar"/>

    </target>
    
    <target name="buildjs">

        <mkdir dir="${build}/${ant.project.name}/WEB-INF/app/static/script"/>
        <java jar="externals/ringo/run.jar" fork="true" failonerror="true">
            <sysproperty key="ringo.home" path="externals/ringo"/>
            <arg path="externals/buildkit/lib/buildkit/build.js"/>
            <arg line="-o ${build}/${ant.project.name}/WEB-INF/app/static/script buildjs.cfg"/>
        </java>

    </target>
    
    <target name="dist" depends="init, buildjs, redist"/>
    
    <target name="redist">

        <mkdir dir="${build}/${ant.project.name}"/>
        
        <copy todir="${build}/${ant.project.name}">
            <fileset dir="src/main/webapp/">
            </fileset>
        </copy>
        <copy todir="${build}/${ant.project.name}/WEB-INF/lib" flatten="true" includeEmptyDirs="false">
            <fileset dir="externals/ringo/lib"/>
        </copy>
        <copy todir="${build}/${ant.project.name}/WEB-INF/app">
            <fileset dir="app">
                <exclude name="**/externals/**"/>
                <exclude name="**/script/**"/>
            </fileset>
        </copy>
        <!-- copy stick -->
        <copy todir="${build}/${ant.project.name}/WEB-INF/app/stick">
            <fileset dir="externals/stick">
                <include name="**/lib/**"/>
                <include name="package.json"/>
            </fileset>
        </copy>
        <!-- copy Ext resources -->
        <copy todir="${build}/${ant.project.name}/WEB-INF/app/static/externals/ext">
            <fileset dir="app/static/externals/ext"/>
        </copy>
        <!-- copy OpenLayers resources -->
        <copy todir="${build}/${ant.project.name}/WEB-INF/app/static/externals/openlayers/theme">
            <fileset dir="app/static/externals/openlayers/theme"/>
        </copy>
        <!-- copy GeoExt resources -->
        <copy todir="${build}/${ant.project.name}/WEB-INF/app/static/externals/geoext/resources">
            <fileset dir="app/static/externals/geoext/resources"/>
        </copy>
        <!-- copy gxp resources -->
        <copy todir="${build}/${ant.project.name}/WEB-INF/app/static/externals/gxp/src/theme">
            <fileset dir="app/static/externals/gxp/src/theme"/>
        </copy>
    </target>

    <target name="debug">
        <java jar="externals/ringo/run.jar" fork="true">
            <sysproperty key="app.proxy.geoserver" value="${app.proxy.geoserver}"/>
            <sysproperty key="app.debug" value="1"/>
            <sysproperty key="ringo.home" path="externals/ringo"/>
            <sysproperty key="ringo.modulepath" path="externals"/>
            <arg path="app/main.js"/>
            <arg line="-p ${app.port}"/>
        </java>
    </target>

    <target name="debugall">
        <java jar="externals/ringo/run.jar" fork="true">
            <sysproperty key="app.proxy.geoserver" value="${app.proxy.geoserver}"/>
            <sysproperty key="app.debug" value="1"/>
            <sysproperty key="ringo.home" path="externals/ringo"/>
            <sysproperty key="ringo.modulepath" path="externals"/>
            <arg value="-d"/>
            <arg path="app/main.js"/>
            <arg line="-p ${app.port}"/>
        </java>
    </target>

    <target name="static-war" depends="dist">
        <war destfile="${build}/${ant.project.name}.war" needxmlfile="false">
            <fileset dir="${build}/${ant.project.name}/WEB-INF/app/static"/>
        </war>
    </target>

    <target name="war" depends="dist">
        <war destfile="${build}/${ant.project.name}.war">
            <fileset dir="${build}/${ant.project.name}"/>
        </war>
    </target>

    <target name="initcargo">
        <echo message="pulling in Cargo for remote deployment"/>
        <mkdir dir="${build}/lib"/>
        <get skipexisting="true" src="http://repo1.maven.org/maven2/org/codehaus/cargo/cargo-core-uberjar/1.2.1/cargo-core-uberjar-1.2.1.jar" dest="${build}/lib/cargo-core-uberjar.jar"/>
        <get skipexisting="true" src="http://repo1.maven.org/maven2/org/codehaus/cargo/cargo-ant/1.2.1/cargo-ant-1.2.1.jar" dest="${build}/lib/cargo-ant.jar"/>
        <get skipexisting="true" src="http://repo1.maven.org/maven2/commons-discovery/commons-discovery/0.4/commons-discovery-0.4.jar" dest="${build}/lib/commons-discovery.jar"/>
        <get skipexisting="true" src="http://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar" dest="${build}/lib/commons-logging.jar"/>
        <taskdef resource="cargo.tasks">
          <classpath>
            <pathelement location="${build}/lib/cargo-core-uberjar.jar"/>
            <pathelement location="${build}/lib/cargo-ant.jar"/>
            <pathelement location="${build}/lib/commons-discovery.jar"/>
            <pathelement location="${build}/lib/commons-logging.jar"/>
          </classpath>
        </taskdef>
    </target>

    <target name="deploy" depends="initcargo,war">
        <cargo containerId="${cargo.container}" action="redeploy" type="remote">
          <configuration type="runtime">
            <property name="cargo.hostname" value="${cargo.host}"/>
            <property name="cargo.servlet.port" value="${cargo.port}"/>
            <property name="cargo.remote.username" value="${cargo.username}"/>
            <property name="cargo.remote.password" value="${cargo.password}"/>
            <deployable type="war" file="${build}/${ant.project.name}.war">
              <property name="context" value="${cargo.context}"/>
            </deployable>
          </configuration>
        </cargo>
    </target>

    <target name="deploy-static" depends="initcargo,static-war">
        <cargo containerId="${cargo.container}" action="redeploy" type="remote">
          <configuration type="runtime">
            <property name="cargo.hostname" value="${cargo.host}"/>
            <property name="cargo.servlet.port" value="${cargo.port}"/>
            <property name="cargo.remote.username" value="${cargo.username}"/>
            <property name="cargo.remote.password" value="${cargo.password}"/>
            <deployable type="war" file="${build}/${ant.project.name}.war">
              <property name="context" value="${cargo.context}"/>
            </deployable>
          </configuration>
        </cargo>
    </target>

    <target name="undeploy" depends="initcargo">
        <cargo containerId="${cargo.container}" action="undeploy" type="remote">
          <configuration type="runtime">
            <property name="cargo.hostname" value="${cargo.host}"/>
            <property name="cargo.servlet.port" value="${cargo.port}"/>
            <property name="cargo.remote.username" value="${cargo.username}"/>
            <property name="cargo.remote.password" value="${cargo.password}"/>
            <deployable type="war" file="${build}/${ant.project.name}.war">
              <property name="context" value="${cargo.context}"/>
            </deployable>
          </configuration>
        </cargo>
    </target>

    <target name="test">
        <java jar="externals/ringo/run.jar" fork="true" failonerror="yes">
            <sysproperty key="ringo.home" path="externals/ringo"/>
            <sysproperty key="ringo.modulepath" path="externals"/>
            <arg path="tests/all.js"/>
        </java>
    </target>

    <target name="clean" description="remove previous build and all dependencies">
        <delete dir="${build}"/>
    </target>

</project>
